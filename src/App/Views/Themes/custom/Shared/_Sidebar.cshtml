@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<form method="get" action="@Url.Action("Index", "Blog")">
    <div class="card my-4">
        <h5 class="card-header">@Localizer["search"]</h5>
        <div class="card-body">
            <div class="input-group">
                <input type="text" id="term" name="term" class="form-control" placeholder="@Localizer["search-for"]">
                <span class="input-group-btn">
                    <button class="btn btn-secondary" type="submit">"@Localizer["search-go"]"</button>
                </span>
            </div>
        </div>
    </div>
</form>

@if (!@Localizer["static-widget"].IsResourceNotFound) {
    <div class="card my-4">
        <h5 class="card-header">@Localizer["static-widget"]</h5>
        <div class="card-body">
            @Localizer["static-widget-body"]
        </div>
    </div>
}
@if (!@Localizer["dynamic-widget"].IsResourceNotFound) {
    <div class="card my-4">
        <h5 class="card-header">@Localizer["dynamic-widget"]</h5>
        <div class="card-body">
            @await Component.InvokeAsync(typeof(Common.Widgets.HtmlBlock), new { theme = "Simple", widget = "Sidebar" })
        </div>
    </div>
}

<div class="card my-4">
    <h5 class="card-header">@Localizer["post-list"]</h5>
    @await Component.InvokeAsync(typeof(Common.Widgets.PostList), new { theme = "Simple", widget = "Post List" })
</div>

<div class="card my-4">
    <h5 class="card-header">@Localizer["categories"]</h5>
    @await Component.InvokeAsync(typeof(Common.Widgets.Categories), new { theme = "Simple", widget = "Categories" })
</div>